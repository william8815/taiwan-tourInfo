{"version":3,"file":"js/44.483d803b.js","mappings":"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","sources":["webpack://taiwan-tour/./src/apis/tastyFood.js","webpack://taiwan-tour/./src/views/TastyFood.vue","webpack://taiwan-tour/./src/views/TastyFood.vue?4a32"],"sourcesContent":["import { apiHelper } from \"@/utils/helpers\";\r\nexport default{\r\n  getRestaurant({area,select,filter,top,skip}){\r\n    return apiHelper.get(`/Restaurant/${area}?${select}${filter}${top}${skip}%24format=JSON`)\r\n  },\r\n  getAllRestaurant({filter,top,skip}){\r\n    return apiHelper.get(`/Restaurant?${filter}${top}${skip}%24format=JSON`)\r\n  },\r\n}","<template>\r\n  <div class=\"container\">\r\n    <MainHeader />\r\n    <Transition name=\"slide\">\r\n      <div v-if=\"isSlideLoading\"></div>\r\n      <SlideSpot v-else :spots=\"foodSlide\" />\r\n    </Transition>\r\n    <Transition name=\"cardList\">\r\n      <div v-if=\"isLoading\"></div>\r\n      <div v-else>\r\n        <SpotList :cardList=\"foodList\" />\r\n        <div v-if=\"foodList.length !== 0\" class=\"btn-section\">\r\n          <button\r\n            @click=\"showMore\"\r\n            class=\"moreBtn btn btn-primary\"\r\n            :disabled=\"isLoading\"\r\n          >\r\n            <div\r\n              v-if=\"isProcessing\"\r\n              class=\"spinner-border spinner-border-sm text-light\"\r\n              role=\"status\"\r\n            >\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <span v-else>更多美食</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MainHeader from \"./../components/MainHead.vue\";\r\nimport SlideSpot from \"./../components/SlideSpot.vue\";\r\nimport SpotList from \"./../components/SpotList.vue\";\r\nimport foodAPI from \"./../apis/tastyFood\";\r\nimport { useStore } from \"vuex\";\r\nimport { ref, reactive, computed, onBeforeMount } from \"vue\";\r\nimport { useRoute, onBeforeRouteUpdate } from \"vue-router\";\r\nexport default {\r\n  components: {\r\n    MainHeader,\r\n    SlideSpot,\r\n    SpotList,\r\n  },\r\n  setup() {\r\n    const skip = ref(0);\r\n    const top = ref(12);\r\n    const selectName = ref(\"\");\r\n    const category = ref(\"\");\r\n    const categoryName = ref(\"\");\r\n    const foodSlide = ref([]);\r\n    const foodList = reactive([]);\r\n    const isLoading = ref(false);\r\n    const isSlideLoading = ref(false);\r\n    const isProcessing = ref(false);\r\n    const store = useStore();\r\n    const currentArea = computed(() => store.state.currentArea);\r\n    const route = useRoute();\r\n    const area = ref(route.params.area);\r\n    const fetchFoodSlide = async () => {\r\n      isSlideLoading.value = true;\r\n      let top = 20;\r\n      let skip = Math.floor(Math.random() * 9) + 1;\r\n      let count = top / 5;\r\n      let tempObj = [];\r\n      try {\r\n        const { data } = await foodAPI.getRestaurant({\r\n          area: currentArea.value.enName,\r\n          select: \"\",\r\n          filter: \"\",\r\n          top: `${encodeURIComponent(\"$\")}top=${top}&`,\r\n          skip: `${encodeURIComponent(\"$\")}skip=${skip}&`,\r\n        });\r\n        if (data.length !== 0) {\r\n          for (let i = 0; i < 5; i++) {\r\n            tempObj.push({\r\n              id: data[count - 1].RestaurantID,\r\n              address: data[count - 1].Address\r\n                ? data[count - 1].Address\r\n                : data[count - 1].City,\r\n              city: data[count - 1].City,\r\n              picture: data[count - 1].Picture ? data[count - 1].Picture : {},\r\n              name: data[count - 1].RestaurantName,\r\n            });\r\n            count += top / 5;\r\n          }\r\n          foodSlide.value = tempObj;\r\n        } else {\r\n          foodSlide.value = [];\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        foodSlide.value = [];\r\n      }\r\n      isSlideLoading.value = false;\r\n    };\r\n    const fetchRestaurant = async () => {\r\n      isLoading.value = true;\r\n      let tempArr = [];\r\n      const { data } = await foodAPI.getRestaurant({\r\n        area: currentArea.value.enName,\r\n        select: selectName.value\r\n          ? `${encodeURIComponent(\"$\")}select=${selectName.value}&`\r\n          : \"\",\r\n        filter: category.value\r\n          ? `${encodeURIComponent(\"$\")}filter=${encodeURIComponent(\r\n              `contains(${category.value}, '${categoryName.value}')`\r\n            )}&`\r\n          : \"\",\r\n        top: `${encodeURIComponent(\"$\")}top=${top.value}&`,\r\n        skip: `${encodeURIComponent(\"$\")}skip=${skip.value}&`,\r\n      });\r\n      tempArr = data.map((card) => ({\r\n        id: card.RestaurantID,\r\n        address: card.Address ? card.Address : card.City,\r\n        city: card.City,\r\n        class1: card.Class ? card.Class : \"\",\r\n        class2: \"\",\r\n        class3: \"\",\r\n        description: card.DescriptionDetail,\r\n        openTime: card.OpenTime,\r\n        phone: card.Phone,\r\n        picture: card.Picture ? card.Picture : {},\r\n        position: card.Position,\r\n        name: card.RestaurantName,\r\n      }));\r\n      foodList.push(...tempArr);\r\n      isLoading.value = false;\r\n    };\r\n    onBeforeMount(fetchFoodSlide);\r\n    onBeforeMount(fetchRestaurant);\r\n    const showMore = () => {\r\n      isProcessing.value = true;\r\n      skip.value += 12;\r\n      setTimeout(() => {\r\n        fetchRestaurant();\r\n        isProcessing.value = false;\r\n      }, 1000);\r\n    };\r\n    onBeforeRouteUpdate((to) => {\r\n      const { area: newArea } = to.params;\r\n      top.value = 12;\r\n      skip.value = 0;\r\n      foodList.splice(0, foodList.length);\r\n      if (area.value !== newArea) {\r\n        area.value = newArea;\r\n        fetchFoodSlide();\r\n        fetchRestaurant();\r\n      }\r\n    });\r\n    return {\r\n      skip,\r\n      top,\r\n      selectName,\r\n      category,\r\n      categoryName,\r\n      foodSlide,\r\n      foodList,\r\n      isLoading,\r\n      isSlideLoading,\r\n      isProcessing,\r\n      currentArea,\r\n      showMore,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./TastyFood.vue?vue&type=template&id=9a130472\"\nimport script from \"./TastyFood.vue?vue&type=script&lang=js\"\nexport * from \"./TastyFood.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\ac-project\\\\taiwan-tour\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["getRestaurant","area","select","filter","top","skip","apiHelper","getAllRestaurant","class","role","_createElementVNode","_hoisted_8","_createElementBlock","_createVNode","_component_MainHeader","_Transition","name","$setup","_hoisted_2","_createBlock","_component_SlideSpot","spots","_hoisted_3","_hoisted_4","_component_SpotList","cardList","length","onClick","disabled","_hoisted_9","_hoisted_10","components","MainHeader","SlideSpot","SpotList","setup","ref","selectName","category","categoryName","foodSlide","foodList","reactive","isLoading","isSlideLoading","isProcessing","store","useStore","currentArea","computed","state","route","useRoute","params","fetchFoodSlide","async","value","Math","floor","random","count","tempObj","data","foodAPI","enName","encodeURIComponent","i","push","id","RestaurantID","address","Address","City","city","picture","Picture","RestaurantName","error","console","log","fetchRestaurant","tempArr","map","card","class1","Class","class2","class3","description","DescriptionDetail","openTime","OpenTime","phone","Phone","position","Position","onBeforeMount","showMore","setTimeout","onBeforeRouteUpdate","to","newArea","splice","__exports__","render"],"sourceRoot":""}